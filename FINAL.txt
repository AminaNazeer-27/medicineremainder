                     1.INDEX.HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Medicine Tracker Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light d-flex flex-column justify-content-center align-items-center vh-100">
    <div class="text-center p-5 bg-white shadow rounded">
        <h1 class="mb-4">Welcome to Medicine Tracker</h1>
        <a href="{{ url_for('login') }}" class="btn btn-success btn-lg mx-2">Login</a>
        <a href="{{ url_for('register') }}" class="btn btn-primary btn-lg mx-2">Register</a>
    </div>
</body>
</html>


                    2.LOGIN.HTML
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login - Medicine Tracker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
<div class="container mt-5 col-md-5">
    <div class="card shadow p-4">
        <h2 class="text-center mb-4">Login</h2>

        {% with messages = get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <div class="alert alert-{{category}}">{{ message }}</div>
            {% endfor %}
          {% endif %}
        {% endwith %}

        <form method="POST" action="{{ url_for('login') }}">
            <div class="mb-3">
                <label class="form-label">Email</label>
                <input type="email" class="form-control" name="email" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Password</label>
                <input type="password" class="form-control" name="password" required>
            </div>
            <button type="submit" class="btn btn-success w-100">Login</button>
        </form>
        <p class="mt-3 text-center">
            Donâ€™t have an account? <a href="{{ url_for('register') }}">Register</a>
        </p>
    </div>
</div>
</body>
</html>

                           3.REGISTER.HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Register - Medicine Tracker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center mb-4">Register</h2>

        <!-- Flash messages -->
        {% with messages = get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <div class="alert alert-{{category}}">{{ message }}</div>
            {% endfor %}
          {% endif %}
        {% endwith %}

        <form method="POST" action="{{ url_for('register') }}">
            <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <input type="text" class="form-control" id="username" name="username" required>
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="email" class="form-control" id="email" name="email" required>
            </div>

            <div class="mb-3">
                <label for="phone" class="form-label">Phone Number</label>
                <input type="text" class="form-control" id="phone" name="phone"
                       pattern="^\d{10}$"
                       title="Phone number must be exactly 10 digits."
                       required>
                <div class="form-text">Phone number must be exactly 10 digits.</div>
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" class="form-control" id="password" name="password"
                       pattern="^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$"
                       title="Password must be at least 8 characters and include letters, numbers, and symbols."
                       required>
                <div class="form-text">
                    Password must be at least 8 characters and include letters, numbers, and symbols.
                </div>
            </div>

            <button type="submit" class="btn btn-primary w-100">Register</button>
        </form>

        <p class="mt-3 text-center">
            Already have an account? <a href="{{ url_for('login') }}">Login</a>
        </p>
    </div>
</body>
</html>


                    4.DASHBOARD.HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dashboard - Medicine Tracker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
<div class="container mt-5">
    <h2 class="mb-3">Welcome, {{ username }}!</h2>
    <p class="text-muted">Manage your medicines and reminders below.</p>

    {% with messages = get_flashed_messages(with_categories=true) %}
      {% if messages %}
        {% for category, message in messages %}
          <div class="alert alert-{{category}}">{{ message }}</div>
        {% endfor %}
      {% endif %}
    {% endwith %}

    <h4 class="mt-4">Your Medicines</h4>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Dosage</th>
                <th>Expiry Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            {% for med in medicines %}
            <tr>
                <td>{{ med.name }}</td>
                <td>{{ med.dosage }}</td>
                <td>{{ med.expiry_date }}</td>
                <td><a href="{{ url_for('delete_medicine', id=med.id) }}" class="btn btn-danger btn-sm">Delete</a></td>
            </tr>
            {% endfor %}
        </tbody>
    </table>

    <div class="mt-3">
        <a href="{{ url_for('add_medicine') }}" class="btn btn-primary">Add Medicine</a>
        <a href="{{ url_for('reminder') }}" class="btn btn-warning">Reminders</a>
        <a href="{{ url_for('alternative_medicines') }}" class="btn btn-info">WHO Alternatives</a>
        <a href="{{ url_for('logout') }}" class="btn btn-secondary">Logout</a>
    </div>
</div>
</body>
</html>


                   5.ADD_MEDICINE.HTML


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Add Medicine - Medicine Tracker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
<div class="container mt-5 col-md-6">
    <div class="card shadow p-4">
        <h2 class="text-center mb-4">Add Medicine</h2>

        {% with messages = get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <div class="alert alert-{{category}}">{{ message }}</div>
            {% endfor %}
          {% endif %}
        {% endwith %}

        <form method="POST" action="{{ url_for('add_medicine') }}">
            <div class="mb-3">
                <label class="form-label">Medicine Name</label>
                <input type="text" class="form-control" name="name" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Dosage</label>
                <input type="text" class="form-control" name="dosage" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Expiry Date</label>
                <input type="date" class="form-control" name="expiry_date" required>
            </div>
            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">Add Medicine</button>
                <a href="{{ url_for('dashboard') }}" class="btn btn-secondary">Back</a>
            </div>
        </form>
    </div>
</div>
</body>
</html>


                      6.ALTERNATIVES_MEDICINES.HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Alternative Medicines - Medicine Tracker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
<div class="container mt-5">
    <h2 class="text-center mb-4">WHO Recommended Alternative Medicines</h2>

    <div class="table-responsive">
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Condition</th>
                    <th>Main Medicine</th>
                    <th>Alternative Medicine</th>
                </tr>
            </thead>
            <tbody>
                {% for alt in alternatives %}
                <tr>
                    <td>{{ alt.condition }}</td>
                    <td>{{ alt.medicine_name }}</td>
                    <td>{{ alt.alternative_name }}</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <div class="text-center mt-3">
        <a href="{{ url_for('dashboard') }}" class="btn btn-secondary">Back to Dashboard</a>
    </div>
</div>
</body>
</html>


                        7.REMINDER.HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reminders - Medicine Tracker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
<div class="container mt-5 col-md-7">
    <div class="card shadow p-4">
        <h2 class="text-center mb-4">Medicine Reminders</h2>

        {% with messages = get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <div class="alert alert-{{category}}">{{ message }}</div>
            {% endfor %}
          {% endif %}
        {% endwith %}

        <form method="POST" action="{{ url_for('reminder') }}">
            <div class="mb-3">
                <label class="form-label">Select Medicine</label>
                <select class="form-control" name="medicine_id" required>
                    {% for med in medicines %}
                    <option value="{{ med.id }}">{{ med.name }} ({{ med.dosage }})</option>
                    {% endfor %}
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Reminder Time</label>
                <input type="time" class="form-control" name="reminder_time" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Frequency</label>
                <select class="form-control" name="frequency" required>
                    <option value="Daily">Daily</option>
                    <option value="Twice a Day">Twice a Day</option>
                    <option value="Weekly">Weekly</option>
                </select>
            </div>
            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-success">Add Reminder</button>
                <a href="{{ url_for('dashboard') }}" class="btn btn-secondary">Back</a>
            </div>
        </form>

        <h4 class="mt-4">Your Existing Reminders</h4>
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Medicine</th>
                        <th>Time</th>
                        <th>Frequency</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    {% for rem in reminders %}
                    <tr>
                        <td>{{ rem.medicine.name }}</td>
                        <td>{{ rem.reminder_time }}</td>
                        <td>{{ rem.frequency }}</td>
                        <td>
                            <a href="{{ url_for('delete_reminder', id=rem.id) }}" class="btn btn-danger btn-sm">Delete</a>
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>
</body>
</html>


                           8.APPMY.PY


from flask import Flask, render_template, request, redirect, url_for, session, flash
from flask_sqlalchemy import SQLAlchemy
from werkzeug.security import generate_password_hash, check_password_hash
import re

app = Flask(__name__)
app.secret_key = "your_secret_key"
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///medtrack.db'
db = SQLAlchemy(app)

# -----------------------------
# Database Models
# -----------------------------
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(50), unique=True, nullable=False)
    email = db.Column(db.String(100), unique=True, nullable=False)
    phone = db.Column(db.String(10), unique=True, nullable=False)
    password = db.Column(db.String(200), nullable=False)

class Medicine(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    name = db.Column(db.String(100), nullable=False)
    dosage = db.Column(db.String(100), nullable=False)
    expiry_date = db.Column(db.String(20), nullable=False)

class Reminder(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    medicine_id = db.Column(db.Integer, db.ForeignKey('medicine.id'))
    reminder_time = db.Column(db.String(20), nullable=False)
    frequency = db.Column(db.String(20), nullable=False)
    medicine = db.relationship("Medicine", backref="reminders")

class AlternativeMedicine(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    condition = db.Column(db.String(100), nullable=False)   # Example: Fever
    medicine_name = db.Column(db.String(100), nullable=False)  # Example: Paracetamol
    alternative_name = db.Column(db.String(100), nullable=False)  # Example: Dolo-650


# -----------------------------
# WHO Alternative Medicine Seeder
# -----------------------------
def seed_alternative_medicines():
    if AlternativeMedicine.query.count() == 0:  # only insert if empty
        data = [
            {"condition": "Fever", "medicine_name": "Paracetamol", "alternative_name": "Dolo-650"},
            {"condition": "Fever", "medicine_name": "Paracetamol", "alternative_name": "Crocin"},
            {"condition": "Cold", "medicine_name": "Cetirizine", "alternative_name": "Levocetirizine"},
            {"condition": "Headache", "medicine_name": "Paracetamol", "alternative_name": "Ibuprofen"},
            {"condition": "Diabetes", "medicine_name": "Metformin", "alternative_name": "Glimepiride"},
            {"condition": "Hypertension", "medicine_name": "Amlodipine", "alternative_name": "Losartan"},
        ]

        for item in data:
            alt = AlternativeMedicine(
                condition=item["condition"],
                medicine_name=item["medicine_name"],
                alternative_name=item["alternative_name"]
            )
            db.session.add(alt)

        db.session.commit()
        print("âœ… WHO Alternative Medicines inserted.")


# -----------------------------
# Routes
# -----------------------------
@app.route('/')
def home():
    return render_template("index.html")

# -------- Register --------
@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        email = request.form['email']
        phone = request.form['phone']
        password = request.form['password']

        # Check duplicates
        if User.query.filter_by(email=email).first():
            flash("Email already registered!", "danger")
            return redirect(url_for('register'))
        if User.query.filter_by(username=username).first():
            flash("Username already taken!", "danger")
            return redirect(url_for('register'))
        if User.query.filter_by(phone=phone).first():
            flash("Phone number already registered!", "danger")
            return redirect(url_for('register'))

        # Phone validation (10 digits)
        if len(phone) != 10 or not phone.isdigit():
            flash("Phone number must be exactly 10 digits.", "danger")
            return redirect(url_for('register'))

        # Password validation (8+ chars, letters, numbers, symbols)
        if not re.match(r'^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$', password):
            flash("Password must be at least 8 characters and include letters, numbers & symbols.", "danger")
            return redirect(url_for('register'))

        hashed_password = generate_password_hash(password)
        new_user = User(username=username, email=email, phone=phone, password=hashed_password)
        db.session.add(new_user)
        db.session.commit()

        flash("Registration successful! Please login.", "success")
        return redirect(url_for('login'))

    return render_template("register.html")

# -------- Login --------
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']

        user = User.query.filter_by(email=email).first()
        if user and check_password_hash(user.password, password):
            session['user_id'] = user.id
            session['username'] = user.username
            flash("Login successful!", "success")
            return redirect(url_for('dashboard'))
        else:
            flash("Invalid email or password!", "danger")

    return render_template("login.html")

# -------- Logout --------
@app.route('/logout')
def logout():
    session.clear()
    flash("Logged out successfully.", "info")
    return redirect(url_for('home'))

# -------- Dashboard --------
@app.route('/dashboard')
def dashboard():
    if "user_id" not in session:
        return redirect(url_for('login'))
    medicines = Medicine.query.filter_by(user_id=session['user_id']).all()
    return render_template("dashboard.html", username=session['username'], medicines=medicines)

# -------- Add Medicine --------
@app.route('/add_medicine', methods=['GET', 'POST'])
def add_medicine():
    if "user_id" not in session:
        return redirect(url_for('login'))

    if request.method == 'POST':
        name = request.form['name']
        dosage = request.form['dosage']
        expiry_date = request.form['expiry_date']

        new_medicine = Medicine(user_id=session['user_id'], name=name, dosage=dosage, expiry_date=expiry_date)
        db.session.add(new_medicine)
        db.session.commit()
        flash("Medicine added successfully!", "success")
        return redirect(url_for('dashboard'))

    return render_template("add_medicine.html")

# -------- Delete Medicine --------
@app.route('/delete_medicine/<int:id>')
def delete_medicine(id):
    if "user_id" not in session:
        return redirect(url_for('login'))

    medicine = Medicine.query.get(id)
    if medicine and medicine.user_id == session['user_id']:
        db.session.delete(medicine)
        db.session.commit()
        flash("Medicine deleted successfully!", "success")
    return redirect(url_for('dashboard'))

# -------- Reminders --------
@app.route('/reminder', methods=['GET', 'POST'])
def reminder():
    if "user_id" not in session:
        return redirect(url_for('login'))

    medicines = Medicine.query.filter_by(user_id=session['user_id']).all()

    if request.method == 'POST':
        medicine_id = request.form['medicine_id']
        reminder_time = request.form['reminder_time']
        frequency = request.form['frequency']

        new_reminder = Reminder(user_id=session['user_id'], medicine_id=medicine_id,
                                reminder_time=reminder_time, frequency=frequency)
        db.session.add(new_reminder)
        db.session.commit()
        flash("Reminder added successfully!", "success")
        return redirect(url_for('reminder'))

    reminders = Reminder.query.filter_by(user_id=session['user_id']).all()
    return render_template("reminder.html", medicines=medicines, reminders=reminders)

# -------- Delete Reminder --------
@app.route('/delete_reminder/<int:id>')
def delete_reminder(id):
    if "user_id" not in session:
        return redirect(url_for('login'))

    reminder = Reminder.query.get(id)
    if reminder and reminder.user_id == session['user_id']:
        db.session.delete(reminder)
        db.session.commit()
        flash("Reminder deleted successfully!", "success")

    return redirect(url_for('reminder'))

# -------- Alternative Medicines --------
@app.route('/alternative_medicines')
def alternative_medicines():
    alternatives = AlternativeMedicine.query.all()
    return render_template("alternative_medicines.html", alternatives=alternatives)

# -----------------------------
# Run
# -----------------------------
if __name__ == "__main__":
    with app.app_context():
        db.create_all()
        seed_alternative_medicines()  # <-- insert WHO alternatives
    app.run(debug=True)


