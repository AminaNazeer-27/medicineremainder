                             ADD_MEDICINE.HTML

<!DOCTYPE html>
<html>
<head>
    <title>Add Medicine</title>
    <style>
        body { font-family: Arial; display: flex; justify-content: center; align-items: center; height: 100vh; background: #f5f5f5; }
        form { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        input { display: block; margin: 10px 0; padding: 10px; width: 100%; }
        button { padding: 10px; width: 100%; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer; }
        button:hover { background: #45a049; }
        a { display: block; text-align: center; margin-top: 10px; }
    </style>
</head>
<body>
    <form method="POST">
        <h2>Add Medicine</h2>
        <input type="text" name="name" placeholder="Medicine Name" required>
        <input type="text" name="dosage" placeholder="Dosage (e.g., 2 pills)" required>
        <input type="date" name="expiry_date" placeholder="Expiry Date" required>
        <button type="submit">Add</button>
        <a href="{{ url_for('dashboard') }}">Back to Dashboard</a>
        {% with messages = get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <p style="color:green;">{{ message }}</p>
            {% endfor %}
          {% endif %}
        {% endwith %}
    </form>
</body>
</html>



                         ALTERNATIVE.HTML

<!DOCTYPE html>
<html>
<head>
    <title>Alternative Medicines</title>
    <style>
        body { font-family: Arial; padding: 20px; background: #f5f5f5; }
        h1, h2 { text-align: center; }
        form { margin: 0 auto; width: 300px; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        input { display: block; margin: 10px 0; padding: 10px; width: 100%; }
        button { padding: 10px; width: 100%; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer; }
        table { width: 80%; margin: 20px auto; border-collapse: collapse; }
        th, td { border: 1px solid #ddd; padding: 10px; text-align: center; }
        th { background-color: #4CAF50; color: white; }
    </style>
</head>
<body>
    <h1>Alternative Medicines</h1>
    <form method="POST">
        <input type="text" name="medicine_name" placeholder="Medicine Name" required>
        <input type="text" name="alternatives" placeholder="Alternatives (comma-separated)" required>
        <button type="submit">Add Alternative</button>
    </form>

    <h2>All Alternatives</h2>
    <table>
        <tr>
            <th>Medicine</th>
            <th>Alternatives</th>
        </tr>
        {% for alt in alternatives %}
        <tr>
            <td>{{ alt.medicine_name }}</td>
            <td>{{ alt.alternatives }}</td>
        </tr>
        {% endfor %}
    </table>

    <a href="{{ url_for('dashboard') }}">Back to Dashboard</a>
</body>
</html>


                        DASHBOARD.HTML

<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
    <style>
        body { font-family: Arial; background: #f5f5f5; padding: 20px; }
        h1 { text-align: center; }
        a { text-decoration: none; margin: 5px; padding: 5px 10px; background: #4CAF50; color: white; border-radius: 5px; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { border: 1px solid #ddd; padding: 10px; text-align: center; }
        th { background-color: #4CAF50; color: white; }
    </style>
</head>
<body>
    <h1>Welcome {{ username }}</h1>
    <a href="{{ url_for('add_medicine') }}">Add Medicine</a>
    <a href="{{ url_for('reminder') }}">Reminders</a>
    <a href="{{ url_for('alternative') }}">Alternative Medicines</a>
    <a href="{{ url_for('logout') }}">Logout</a>

    <h2>Your Medicines</h2>
    <table>
        <tr>
            <th>Name</th>
            <th>Dosage</th>
            <th>Expiry Date</th>
            <th>Action</th>
        </tr>
        {% for med in medicines %}
        <tr>
            <td>{{ med.name }}</td>
            <td>{{ med.dosage }}</td>
            <td>{{ med.expiry_date }}</td>
            <td><a href="{{ url_for('delete_medicine', id=med.id) }}">Delete</a></td>
        </tr>
        {% endfor %}
    </table>
</body>
</html>


                              HOME.HTML

<!DOCTYPE html>
<html>
<head>
    <title>Medicine Tracker Home</title>
    <style>
        body { font-family: Arial, sans-serif; background: #f5f5f5; text-align: center; padding-top: 100px; }
        a { text-decoration: none; margin: 10px; padding: 10px 20px; background: #4CAF50; color: white; border-radius: 5px; }
        a:hover { background: #45a049; }
    </style>
</head>
<body>
    <h1>Welcome to Medicine Tracker</h1>
    <a href="{{ url_for('login') }}">Login</a>
    <a href="{{ url_for('register') }}">Register</a>
</body>
</html>

                          LOGIN.HTML

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <style>
        body { font-family: Arial; background: #f5f5f5; display: flex; justify-content: center; align-items: center; height: 100vh; }
        form { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        input { display: block; margin: 10px 0; padding: 10px; width: 100%; }
        button { padding: 10px; width: 100%; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer; }
        button:hover { background: #45a049; }
        a { display: block; margin-top: 10px; text-align: center; }
    </style>
</head>
<body>
    <form method="POST">
        <h2>Register</h2>
        <input type="text" name="username" placeholder="Username" required>
        <input type="email" name="email" placeholder="Email" required>
        <input type="password" name="password" placeholder="Password" required>
        <button type="submit">Register</button>
        <a href="{{ url_for('login') }}">Already have an account? Login</a>
        {% with messages = get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <p style="color:red;">{{ message }}</p>
            {% endfor %}
          {% endif %}
        {% endwith %}
    </form>
</body>
</html>

                          REGISTER.HTML

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <style>
        body { font-family: Arial; background: #f5f5f5; display: flex; justify-content: center; align-items: center; height: 100vh; }
        form { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        input { display: block; margin: 10px 0; padding: 10px; width: 100%; }
        button { padding: 10px; width: 100%; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer; }
        button:hover { background: #45a049; }
        a { display: block; margin-top: 10px; text-align: center; }
    </style>
</head>
<body>
    <form method="POST">
        <h2>Register</h2>
        <input type="text" name="username" placeholder="Username" required>
        <input type="email" name="email" placeholder="Email" required>
        <input type="password" name="password" placeholder="Password" required>
        <button type="submit">Register</button>
        <a href="{{ url_for('login') }}">Already have an account? Login</a>
        {% with messages = get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <p style="color:red;">{{ message }}</p>
            {% endfor %}
          {% endif %}
        {% endwith %}
    </form>
</body>
</html>


                               REMAINDER.HTML
<!DOCTYPE html>
<html>
<head>
    <title>Reminders</title>
    <style>
        body { font-family: Arial; padding: 20px; background: #f5f5f5; }
        h1, h2 { text-align: center; }
        form { margin: 0 auto; width: 300px; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        input, select { display: block; margin: 10px 0; padding: 10px; width: 100%; }
        button { padding: 10px; width: 100%; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer; }
        table { width: 80%; margin: 20px auto; border-collapse: collapse; }
        th, td { border: 1px solid #ddd; padding: 10px; text-align: center; }
        th { background-color: #4CAF50; color: white; }
    </style>
</head>
<body>
    <h1>Reminders</h1>
    <form method="POST">
        <select name="medicine_id" required>
            <option value="">Select Medicine</option>
            {% for med in medicines %}
                <option value="{{ med.id }}">{{ med.name }}</option>
            {% endfor %}
        </select>
        <input type="time" name="reminder_time" required>
        <input type="text" name="frequency" placeholder="Frequency (e.g., daily)" required>
        <button type="submit">Add Reminder</button>
    </form>

    <h2>Your Reminders</h2>
    <table>
        <tr>
            <th>Medicine</th>
            <th>Time</th>
            <th>Frequency</th>
            <th>Action</th>
        </tr>
        {% for rem in reminders %}
        <tr>
            <td>{{ rem.medicine.name }}</td>
            <td>{{ rem.reminder_time }}</td>
            <td>{{ rem.frequency }}</td>
            <td><a href="{{ url_for('delete_reminder', id=rem.id) }}">Delete</a></td>
        </tr>
        {% endfor %}
    </table>

    <a href="{{ url_for('dashboard') }}">Back to Dashboard</a>
</body>
</html>


                            APPMY.PY


from flask import Flask, render_template, request, redirect, url_for, session, flash
from flask_sqlalchemy import SQLAlchemy
from werkzeug.security import generate_password_hash, check_password_hash
from datetime import datetime

app = Flask(__name__)
app.secret_key = "your_secret_key_here"
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///medtrack.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# -----------------------------
# Database Models
# -----------------------------
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(50), unique=True, nullable=False)
    email = db.Column(db.String(100), unique=True, nullable=False)
    password = db.Column(db.String(200), nullable=False)

class Medicine(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    name = db.Column(db.String(100), nullable=False)
    dosage = db.Column(db.String(100), nullable=False)
    expiry_date = db.Column(db.String(20), nullable=False)

class Reminder(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    medicine_id = db.Column(db.Integer, db.ForeignKey('medicine.id'), nullable=False)
    reminder_time = db.Column(db.String(20), nullable=False)
    frequency = db.Column(db.String(20), nullable=False)
    medicine = db.relationship("Medicine", backref="reminders")

class AlternativeMedicine(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    medicine_name = db.Column(db.String(100), nullable=False)
    alternatives = db.Column(db.String(200), nullable=False)  # comma-separated alternatives

# -----------------------------
# Routes
# -----------------------------
@app.route('/')
def home():
    return render_template("home.html")

# -------- Register --------
@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        email = request.form['email']
        password = request.form['password']

        if User.query.filter_by(email=email).first():
            flash("Email already registered!", "danger")
            return redirect(url_for('register'))
        if User.query.filter_by(username=username).first():
            flash("Username already taken!", "danger")
            return redirect(url_for('register'))

        hashed_password = generate_password_hash(password)
        new_user = User(username=username, email=email, password=hashed_password)
        db.session.add(new_user)
        db.session.commit()
        flash("Registration successful! Please login.", "success")
        return redirect(url_for('login'))

    return render_template("register.html")

# -------- Login --------
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        user = User.query.filter_by(username=username).first()
        if user and check_password_hash(user.password, password):
            session['user_id'] = user.id
            session['username'] = user.username
            flash(f"Welcome {user.username}!", "success")
            return redirect(url_for('dashboard'))
        else:
            flash("Invalid username or password!", "danger")
            return redirect(url_for('login'))

    return render_template("login.html")

# -------- Logout --------
@app.route('/logout')
def logout():
    session.clear()
    flash("You have logged out.", "success")
    return redirect(url_for('home'))

# -------- Dashboard --------
@app.route('/dashboard')
def dashboard():
    if "user_id" not in session:
        flash("Please login first!", "danger")
        return redirect(url_for('login'))

    medicines = Medicine.query.filter_by(user_id=session['user_id']).all()
    return render_template("dashboard.html", username=session['username'], medicines=medicines)

# -------- Add Medicine --------
@app.route('/add_medicine', methods=['GET', 'POST'])
def add_medicine():
    if "user_id" not in session:
        flash("Please login first!", "danger")
        return redirect(url_for('login'))

    if request.method == 'POST':
        name = request.form['name']
        dosage = request.form['dosage']
        expiry_date = request.form['expiry_date']

        new_med = Medicine(user_id=session['user_id'], name=name, dosage=dosage, expiry_date=expiry_date)
        db.session.add(new_med)
        db.session.commit()
        flash("Medicine added successfully!", "success")
        return redirect(url_for('dashboard'))

    return render_template("add_medicine.html")

# -------- Delete Medicine --------
@app.route('/delete_medicine/<int:id>')
def delete_medicine(id):
    if "user_id" not in session:
        flash("Please login first!", "danger")
        return redirect(url_for('login'))

    med = Medicine.query.get(id)
    if med and med.user_id == session['user_id']:
        db.session.delete(med)
        db.session.commit()
        flash("Medicine deleted successfully!", "success")
    return redirect(url_for('dashboard'))

# -------- Reminder --------
@app.route('/reminder', methods=['GET', 'POST'])
def reminder():
    if "user_id" not in session:
        flash("Please login first!", "danger")
        return redirect(url_for('login'))

    medicines = Medicine.query.filter_by(user_id=session['user_id']).all()

    if request.method == 'POST':
        medicine_id = request.form['medicine_id']
        reminder_time = request.form['reminder_time']
        frequency = request.form['frequency']

        new_rem = Reminder(user_id=session['user_id'], medicine_id=medicine_id,
                           reminder_time=reminder_time, frequency=frequency)
        db.session.add(new_rem)
        db.session.commit()
        flash("Reminder added successfully!", "success")
        return redirect(url_for('reminder'))

    reminders = Reminder.query.filter_by(user_id=session['user_id']).all()
    return render_template("reminder.html", medicines=medicines, reminders=reminders)

# -------- Delete Reminder --------
@app.route('/delete_reminder/<int:id>')
def delete_reminder(id):
    if "user_id" not in session:
        flash("Please login first!", "danger")
        return redirect(url_for('login'))

    rem = Reminder.query.get(id)
    if rem and rem.user_id == session['user_id']:
        db.session.delete(rem)
        db.session.commit()
        flash("Reminder deleted successfully!", "success")
    return redirect(url_for('reminder'))

# -------- Alternative Medicine --------
@app.route('/alternative', methods=['GET', 'POST'])
def alternative():
    if "user_id" not in session:
        flash("Please login first!", "danger")
        return redirect(url_for('login'))

    if request.method == 'POST':
        medicine_name = request.form['medicine_name']
        alternatives = request.form['alternatives']
        new_alt = AlternativeMedicine(medicine_name=medicine_name, alternatives=alternatives)
        db.session.add(new_alt)
        db.session.commit()
        flash("Alternative medicine added!", "success")
        return redirect(url_for('alternative'))

    all_alts = AlternativeMedicine.query.all()
    return render_template("alternative.html", alternatives=all_alts)

# -----------------------------
# Run the app
# -----------------------------
if __name__ == "__main__":
    with app.app_context():
        db.create_all()  # Create tables in medtrack.db
    app.run(debug=True)


                      
